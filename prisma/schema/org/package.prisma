// largely static

model Package {
  id    Int     @id @default(autoincrement())
  name  String

  counselorMeetings Int @default(0)

  personalBrand     Boolean
  personalStatement Boolean

  standardApps Int @default(0)
  premiumApps  Int @default(0)
//   drafts       Int @default(0)

  cohorts           Int @default(0)
  meetingsPerCohort Int @default(0)

  matches Match[]
}

// model Essay {
//     id   Int     @id @default(autoincrement())
//     name String?

//     personalBrand Boolean?
//     standardApps  Int?     @default(0)
//     premiumApps   Int?     @default(0)
//     drafts        Int?     @default(0) // essay microservice

//     packages Package[]

//     @@unique([personalBrand, standardApps, premiumApps, drafts])
// }

// model Cohort {
//     id Int @id @default(autoincrement())

//     quantity          Int @default(0)
//     meetingsPerCohort Int @default(0)

//     packages Package[]

//     @@unique([quantity, meetingsPerCohort])
// }

// look into this part

// add me later, once team matching is done

// contract String? // TODO; docusign contract url

// packageId Int
// Package   Package @relation(fields: [packageId], references: [id])

// // add projects; figure out the consumable patterns

// discounts    Discount[]
// installments Installment[]
